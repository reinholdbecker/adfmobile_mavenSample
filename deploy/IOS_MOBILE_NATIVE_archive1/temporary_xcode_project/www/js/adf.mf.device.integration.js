try{window._anomFunkMap=window._anomFunkMap||{},window._anomFunkMapNextId=window._anomFunkMapNextId||0,window.anomToNameFunk=window.anomToNameFunk||function(a){var b="f"+_anomFunkMapNextId++;_anomFunkMap[b]=function(){a.apply(this,arguments);_anomFunkMap[b]=null;delete _anomFunkMap[b]};return"_anomFunkMap."+b},window.GetFunctionName=window.GetFunctionName||function(a){if("function"===typeof a){var b=a.name;b||(b=(b=a.toString().match(/^\s*function\s+([^\s\(]+)/))&&b[1]);return b&&window[b]===a?b:
anomToNameFunk(a)}return null},window.adf=window.adf||{},window.adf.mf=window.adf.mf||{},window.adf.mf.internal=window.adf.mf.internal||{},window.adf.mf.internal.di=window.adf.mf.internal.di||{},window.adf.mf.internal.di.api=window.adf.mf.internal.di.api||{},window.getAdfmfApiRoot=function(){return adf.mf.internal.di.api},window.container=window.container||{},window.container.internal=window.container.internal||{},window.container.internal.device=window.container.internal.device||{},window.container.internal.device.integration=
window.container.internal.device.integration||{},window.containerInternalRoot=window.containerInternalRoot||function(){return container.internal.device.integration},window.containerInternalRootDescription=window.containerInternalRootDescription||function(){return"container.internal.device.integration"},containerInternalRoot().getAdfmfPhoneGap=containerInternalRoot().getAdfmfPhoneGap||function(){return"undefined"==typeof Cordova?(alert("Cordova is undefined."),null):Cordova},window.adf.pg="RUNNING ON A PHONEGAP DEVICE",
containerInternalRoot().getAmxIncludeList=function(a,b){var d=new CordovaRequest({params:[]},function(b,d){a(d)},b);d.setPlugin("ADFMobileShell");d.setMethod("getAmxIncludeList");d.execute()},window.ADFMobileFeatures=function(){this.inProgress=!1;this.records=[];this.registerActivationHandler_errorCallback=this.showNavigationBar_errorCallback=this.hideNavigationBar_errorCallback=null},ADFMobileFeatures.prototype.registerActivationHandler=function(a,b){this.registerActivationHandler_errorCallback=
null;void 0==b||null==b||(this.registerActivationHandler_errorCallback=b);var d=new CordovaRequest({params:[window.GetFunctionName(a)]},function(){},b);d.setPlugin("ADFMobileFeatures");d.setMethod("registerActivationHandler");d.execute()},window.ADFMobileSecurity=function(){},ADFMobileSecurity.prototype.featureLogin=function(a,b,d){a=new CordovaRequest({params:[a,b,d]},function(){adf.mf.log.Framework.logp(adf.mf.log.level.FINE,"device.integration","success","featureLogin successful")},function(){adf.mf.log.Framework.logp(adf.mf.log.level.FINE,
"device.integration","failure","featureLogin failed")});a.setPlugin("ADFMobileSecurity");a.setMethod("login");a.execute()},ADFMobileSecurity.prototype.getLoginViewInitData=function(a,b){var d=new CordovaRequest({params:[window.GetFunctionName(a)]},a,b);d.setPlugin("ADFMobileSecurity");d.setMethod("getLoginViewInitData");d.execute()},window.ADFMobileJava=function(){this.inProgress=!1;this.invokeJava_errorCallback=this.invokeJava_resultsCallback=null},ADFMobileJava.prototype.invoke=function(a,b,d,e){try{(new CordovaRequest(b,
d,e)).execute()}catch(g){a="Error in ADFMobileJava.prototype.invoke - error="+adf.mf.util.stringify(g)+" for request = "+adf.mf.util.stringify(b),alert(a),adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE,"device.integration","invoke","Error creating nd executing CordovaRequest error = "+a)}},OutstandingRequestList=function(){this.queue={};this.nextId=500;this.size=0;this.getUniqueRequestId=function(){return"CR-"+ ++this.nextId};this.showQueue=function(){try{var a=" ",b=0;for(property in this.queue)void 0!==
property&&null!==property&&"function"!=typeof this.queue[property]&&(a+='"'+property+":"+this.queue[property].requestId+":"+this.queue[property].timestamp+'" ',b++);return" queue:"+b+"= ["+a+"]"}catch(d){return"--error--"}};this.getRequest=function(a){return this.queue[a]};this.insert=function(a){this.size++;this.queue[a.requestId]=a};this.remove=function(a){var b=this.queue[a];void 0===b?adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE,"device.integration","remove","Error remvoving CordovaRequest: ERROR in Outstanding Request List ["+
a+"] is not found."):(b.requestId!=a&&adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE,"device.integration","remove","Error remvoving CordovaRequest: ERROR in Outstanding Request List queue["+a+"]/"+b.timestamp+" is not "+b.requestId),delete this.queue[a]);return b};return this},adf.mf.internal.processingRequestQueue=new OutstandingRequestList,containerInternalRoot().cordovaSuccessCallback=function(a){return new Function("r","try{ "+("  var req = adf.mf.internal.processingRequestQueue.remove('"+
a+"'); ")+"  if((req != undefined) && (req != null))  {    adf.mf.log.Framework.logp(adf.mf.log.level.FINER, 'adf.mf.device.integration', 'cordovaSuccessCallback', 'Cordova Response Success Callback' + req.requestId);    req.success(r);  }else{"+("    adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE, 'adf.mf.device.integration', 'cordovaSuccessCallback', 'Cordova Success Response Handler Error: Request Id ("+a+") was not found.');")+"  }}catch(e){"+("  adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE, 'adf.mf.device.integration', 'cordovaSuccessCallback', 'Cordova Success Response Handler Error: Request Id ("+
a+") error=' + e);")+"  alert('Cordova Response Success Handler Error:' + e);}")},containerInternalRoot().cordovaFailureCallback=function(a){return new Function("r","try{ "+("  var req = adf.mf.internal.processingRequestQueue.remove('"+a+"'); ")+"  if((req != undefined) && (req != null))  {    adf.mf.log.Framework.logp(adf.mf.log.level.FINER, 'adf.mf.device.integration', 'cordovaFailureCallback', 'Cordova Response Failure Callback' + req.requestId);    req.failure(r);  }else{"+("    adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE, 'adf.mf.device.integration', 'cordovaSuccessCallback', 'Cordova Failure Response Handler Error: Request Id ("+
a+") was not found.');")+"  }}catch(e){"+("  adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE, 'adf.mf.device.integration', 'cordovaFailureCallback', 'Cordova Failure Response Handler Error: Request Id ("+a+") error=' + e);")+"  alert('Cordova Response Failure Handler Error:' + e);}")},CordovaRequest=function(a,b,d){try{return this.timestamp="T"+(new Date).getTime()%6E5,this.requestId=adf.mf.internal.processingRequestQueue.getUniqueRequestId(),this.scb=adf.mf.internal.util.is_array(b)?b:[b],this.fcb=
adf.mf.internal.util.is_array(d)?d:[d],this.plugin="ADFMobileShell",this.methodName="invokeJavaMethod",this.request=a,this.setPlugin=function(a){this.plugin=a},this.setMethod=function(a){this.methodName=a},this.success=function(a){try{adf.mf.log.Framework.isLoggable(adf.mf.log.level.FINER)&&adf.mf.log.Framework.logp(adf.mf.log.level.FINE,"device.integration","success","Inside the success callback for request "+this.requestId);for(var b=0;b<this.scb.length;++b)try{this.scb[b](this.request,a)}catch(d){adf.mf.log.Framework.logp(adf.mf.log.level.WARNING,
"device.integration","success","Error executing Cordova request "+this.requestId+" success callback "+b+" or "+this.scb[b]+" request: "+adf.mf.util.stringify(this.request)+" result: "+adf.mf.util.stringify(a)+" error: "+adf.mf.util.stringify(d));try{this.fcb[b](this.request,d)}catch(e){adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE,"device.integration","success","Error executing Cordova request "+this.requestId+" failed callback "+b+"   error = "+e)}}}catch(n){adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE,
"device.integration","success","Error executing cordovaSuccess callback - "+n)}},this.fail=this.failure=function(a){try{adf.mf.log.Framework.isLoggable(adf.mf.log.level.FINE)&&adf.mf.log.Framework.logp(adf.mf.log.level.FINER,"device.integration","failure","Inside the failure callback for request "+this.requestId);for(var b=0;b<this.fcb.length;++b)try{this.fcb[b](this.request,a)}catch(d){adf.mf.log.Framework.logp(adf.mf.log.level.WARNING,"device.integration","failure","Error executing Cordova request "+
this.requestId+" failure callback "+b+" or "+this.scb[b]+" request: "+adf.mf.util.stringify(this.request)+" result: "+adf.mf.util.stringify(a)+" error: "+adf.mf.util.stringify(d))}}catch(e){adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE,"device.integration","failure","Error executing cordovaFailure callback - "+e)}},this.execute=function(){try{"undefined"==typeof Cordova?(alert("Cordova has not been properly included.  Aborting Cordova call."),this.cordovaFailure()):(adf.mf.internal.processingRequestQueue.insert(this),
adf.mf.internal.processingRequestQueue.insert(this),Cordova.exec(containerInternalRoot().cordovaSuccessCallback(this.requestId),containerInternalRoot().cordovaFailureCallback(this.requestId),this.plugin,this.methodName,[this.request]))}catch(a){adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE,"device.integration","execute","Error executing Cordova request "+this.requestId+" with error = "+adf.mf.util.stringify(a));for(var b=0;b<this.fcb.length;++b)try{this.fcb[b](this.request,a)}catch(d){adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE,
"device.integration","execute","Error executing Cordova request "+this.requestId+" failed callback "+b)}}},adf.mf.log.Framework.isLoggable(adf.mf.log.level.FINER)&&adf.mf.log.Framework.logp(adf.mf.log.level.FINER,"device.integration","constructor","Cordova Request "+this.requestId+" has been created. "+adf.mf.util.stringify(this.request)),this}catch(e){adf.mf.log.Framework.logp(adf.mf.log.level.SEVERE,"device.integration","execute","Error creating Cordova Request error = "+adf.mf.util.stringify(e))}},
containerInternalRoot().Features=new ADFMobileFeatures,adf.mf.Features=containerInternalRoot().Features,containerInternalRoot().vmchannel=new ADFMobileJava,containerInternalRoot().Security=new ADFMobileSecurity}catch(e$$77){console.log("**************************************************"),console.log("***** ERROR: adf.mf.device.integration.js buildout error: "+e$$77)};